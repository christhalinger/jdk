name: JDK

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ test ]
#  pull_request:
#    branches: [ master ]

env:
  APT_GET_PACKAGES: libasound2-dev libcups2-dev libx11-dev libxext-dev libxrandr-dev libxrender-dev libxt-dev libxtst-dev
  CONF_NAME: output
  JOBS: 2
  TEST_JOBS: 2
  JTREG_URL: https://ci.adoptopenjdk.net/view/Dependencies/job/jtreg/lastSuccessfulBuild/artifact/jtreg-5.0-b01.tar.gz

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  download:
    runs-on: [ ubuntu-18.04 ]
    steps:
      - run: wget -qO - ${{env.JTREG_URL}} | tar -xzf -
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: jtreg
          path: jtreg/

  build:
    needs: [ download ]
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
    runs-on: ${{matrix.os}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: mstksg/get-package@v1
        with:
          #brew: # optional
          apt-get: ${{env.APT_GET_PACKAGES}}

      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
      - uses: actions/download-artifact@v1.0.0
        with:
          name: jtreg
      - run: chmod a+x jtreg/bin/*

      - run: sh configure --with-conf-name=${{env.CONF_NAME}} --with-log=info --with-jtreg=$PWD/jtreg --with-jvm-features=-epsilongc,-shenandoahgc --with-jobs=${{env.JOBS}} --with-test-jobs=${{env.TEST_JOBS}}
      - run: make jdk-image
      - run: make test-image
          
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: images-${{matrix.os}}
          path: build/${{env.CONF_NAME}}/images/
          
  test-jdk_lang:
    needs: [ build ]
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: mstksg/get-package@v1
        with:
          apt-get: ${{env.APT_GET_PACKAGES}}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
      - uses: actions/download-artifact@v1.0.0
        with:
          name: jtreg
      - run: chmod a+x jtreg/bin/*
      - run: sh configure --with-conf-name=${{env.CONF_NAME}} --with-log=info --with-jtreg=$PWD/jtreg --with-jvm-features=-epsilongc,-shenandoahgc --with-jobs=${{env.JOBS}} --with-test-jobs=${{env.TEST_JOBS}}
      - uses: actions/download-artifact@v1.0.0
        with:
          name: images-${{matrix.os}}
          path: build/${{env.CONF_NAME}}/
      - run: mv build/${{env.CONF_NAME}}/images-${{matrix.os}} build/${{env.CONF_NAME}}/images
      - run: chmod a+x build/${{env.CONF_NAME}}/images/jdk/bin/*
      - run: make run-test-only TEST="jdk_lang"

  test-jdk_util:
    needs: [ build ]
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: mstksg/get-package@v1
        with:
          apt-get: ${{env.APT_GET_PACKAGES}}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
      - uses: actions/download-artifact@v1.0.0
        with:
          name: jtreg
      - run: chmod a+x jtreg/bin/*
      - run: sh configure --with-conf-name=${{env.CONF_NAME}} --with-log=info --with-jtreg=$PWD/jtreg --with-jvm-features=-epsilongc,-shenandoahgc --with-jobs=${{env.JOBS}} --with-test-jobs=${{env.TEST_JOBS}}
      - uses: actions/download-artifact@v1.0.0
        with:
          name: images-${{matrix.os}}
          path: build/${{env.CONF_NAME}}/
      - run: mv build/${{env.CONF_NAME}}/images-${{matrix.os}} build/${{env.CONF_NAME}}/images
      - run: chmod a+x build/${{env.CONF_NAME}}/images/jdk/bin/*
      - run: make run-test-only TEST="jdk_util"
