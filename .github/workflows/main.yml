name: JDK

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ test ]
#  pull_request:
#    branches: [ master ]

env:
  APT_GET_PACKAGES: libasound2-dev libcups2-dev libx11-dev libxext-dev libxrandr-dev libxrender-dev libxt-dev libxtst-dev
  CONFIGURE_OPTIONS: --with-log=info --with-jtreg=$PWD/jtreg --with-jvm-features=-epsilongc,-shenandoahgc
  JTREG_URL: https://ci.adoptopenjdk.net/view/Dependencies/job/jtreg/lastSuccessfulBuild/artifact/jtreg-5.0-b01.tar.gz

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  download:
    runs-on: [ ubuntu-18.04 ]
    steps:
      - uses: actions/cache@v1
        id: cache-jtreg
        with:
          path: cache/
          key: jtreg
      - if: steps.cache-jtreg.outputs.cache-hit != 'true'
        run: wget -O - ${{env.JTREG_URL}} | tar -xvzf - -C cache/
      - run: pwd; ls -l
#      - uses: actions/upload-artifact@v1.0.0
#        with:
#          name: jtreg
#          path: jtreg/

  build:
    needs: [ download ]
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
    runs-on: ${{matrix.os}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: mstksg/get-package@v1
        with:
          #brew: # optional
          apt-get: ${{env.APT_GET_PACKAGES}}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
#      - uses: actions/download-artifact@v1.0.0
#        with:
#          name: jtreg
#      - run: chmod a+x jtreg/bin/*

      - run: sh configure ${{env.CONFIGURE_OPTIONS}}
      - run: make jdk-image
      - run: make test-image

      - run: mkdir artifacts
      - run: zip -r -0 artifacts/images.zip build/*/images/
      - uses: actions/upload-artifact@v1.0.0
        with:
          name: artifacts-${{matrix.os}}
          path: artifacts/
          
  test-jdk:
    needs: [ build ]
    strategy:
      matrix:
        os: [ ubuntu-18.04, macos-10.15 ]
        test: [ jdk_lang, jdk_util ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: mstksg/get-package@v1
        with:
          apt-get: ${{env.APT_GET_PACKAGES}}
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1.3.0
        with:
          java-version: 13
#      - uses: actions/download-artifact@v1.0.0
#        with:
#          name: jtreg
#      - run: chmod a+x jtreg/bin/*
      - uses: actions/download-artifact@v1.0.0
        with:
          name: artifacts-${{matrix.os}}
      - run: sh configure ${{env.CONFIGURE_OPTIONS}}
      - run: unzip artifacts-${{matrix.os}}/images.zip
      - run: make run-test-only TEST="${{matrix.test}}"
